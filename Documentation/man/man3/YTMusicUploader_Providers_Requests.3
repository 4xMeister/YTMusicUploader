.TH "YTMusicUploader.Providers.Requests" 3 "Tue Aug 25 2020" "YT Music Uploader" \" -*- nroff -*-
.ad l
.nh
.SH NAME
YTMusicUploader.Providers.Requests \- HttpWebRequest POST request to send to YouTube to check if the user's is authenticated (signed in) by determining if a generic request is successful given the current authentication cookie value we have stored\&.  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBIsAuthenticated\fP (string cookieValue)"
.br
.RI "HttpWebRequest POST request to send to YouTube to check if the user's is authenticated (signed in) by determining if a generic request is successful given the current authentication cookie value we have stored\&. "
.ti -1c
.RI "static bool \fBIsSongUploaded\fP (string musicFilePath, string cookieValue, \fBMusicDataFetcher\fP musicDataFetcher=null)"
.br
.RI "HttpWebRequest POST request to send to YouTube to determine if the song about to be uploaded already exists It may request a little attention depending on the results, seen as though we're trying to match a song based on artist, album and track name, which may be slightly different in the uploading music file's meta tags\&. Currently it uses a Levenshtein distance fuzzy logic implementation to check similarity between strings and is considered a match if it's above 0\&.75\&. "
.ti -1c
.RI "static bool \fBIsSongUploadedMulitpleAlbumNameVariations\fP (string artist, string album, string track, string cookieValue)"
.br
.RI "HttpWebRequest POST request to send to YouTube to determine if the song about to be uploaded already exists It may request a little attention depending on the results, seen as though we're trying to match a song based on artist, album and track name, which may be slightly different in the uploading music file's meta tags\&. Currently it uses a Levenshtein distance fuzzy logic implementation to check similarity between strings and is considered a match if it's above 0\&.75\&. "
.ti -1c
.RI "static bool \fBIsSongUploaded\fP (string artist, string album, string track, string cookieValue)"
.br
.RI "HttpWebRequest POST request to send to YouTube to determine if the song about to be uploaded already exists It may request a little attention depending on the results, seen as though we're trying to match a song based on artist, album and track name, which may be slightly different in the uploading music file's meta tags\&. Currently it uses a Levenshtein distance fuzzy logic implementation to check similarity between strings and is considered a match if it's above 0\&.75\&. "
.ti -1c
.RI "static bool \fBUploadSong\fP (\fBMainForm\fP mainForm, string cookieValue, string filePath, int maxUploadSpeed, out string error)"
.br
.RI "HttpWebRequest POST request to send to YouTube to upload a music file\&. "
.ti -1c
.RI "static HttpWebRequest \fBAddStandardHeaders\fP (HttpWebRequest webRequest, string cookieValue)"
.br
.RI "Required headers for any YouTube music API request "
.ti -1c
.RI "static byte[] \fBGetPostBytes\fP (string stringToEncode)"
.br
.RI "Converts a string to a byte array for use in a HttpWebRequest upload stream (UTF8 encoded)\&. "
.in -1c
.SH "Detailed Description"
.PP 
HttpWebRequest POST request to send to YouTube to check if the user's is authenticated (signed in) by determining if a generic request is successful given the current authentication cookie value we have stored\&. 

YouTube music HttpWebRequest abstract class
.PP
HttpWebRequest POST request to send to YouTube to upload a music file\&.
.PP
HttpWebRequest POST request to send to YouTube to determine if the song about to be uploaded already exists It may request a little attention depending on the results, seen as though we're trying to match a song based on artist, album and track name, which may be slightly different in the uploading music file's meta tags\&. Currently it uses a Levenshtein distance fuzzy logic implementation to check similarity between strings and is considered a match if it's above 0\&.75\&.
.PP
In this case, we're actually perform a request for personally uploaded music files
.PP
Thanks to: sigma67: https://ytmusicapi.readthedocs.io/en/latest/ https://github.com/sigma67/ytmusicapi
.PP
Thanks to: sigma67: https://ytmusicapi.readthedocs.io/en/latest/ https://github.com/sigma67/ytmusicapi
.SH "Member Function Documentation"
.PP 
.SS "static HttpWebRequest YTMusicUploader\&.Providers\&.Requests\&.AddStandardHeaders (HttpWebRequest webRequest, string cookieValue)\fC [static]\fP"

.PP
Required headers for any YouTube music API request 
.PP
\fBParameters\fP
.RS 4
\fIwebRequest\fP HttpWebRequest to add the headers to
.br
\fIcookieValue\fP Cookie from a previous YouTube Music sign in via this application (stored in the database)
.RE
.PP
\fBReturns\fP
.RS 4
The same HttpWebReqest object with added default headers
.RE
.PP

.SS "static byte [] YTMusicUploader\&.Providers\&.Requests\&.GetPostBytes (string stringToEncode)\fC [static]\fP"

.PP
Converts a string to a byte array for use in a HttpWebRequest upload stream (UTF8 encoded)\&. 
.PP
\fBParameters\fP
.RS 4
\fIstringToEncode\fP String to convert to a UTF8 encoded byte array
.RE
.PP
\fBReturns\fP
.RS 4
UTF8 encoded byte arra
.RE
.PP

.SS "static bool YTMusicUploader\&.Providers\&.Requests\&.IsAuthenticated (string cookieValue)\fC [static]\fP"

.PP
HttpWebRequest POST request to send to YouTube to check if the user's is authenticated (signed in) by determining if a generic request is successful given the current authentication cookie value we have stored\&. In this case, we're actually perform a request for personally uploaded music files
.PP
Thanks to: sigma67: https://ytmusicapi.readthedocs.io/en/latest/ https://github.com/sigma67/ytmusicapi
.PP
\fBParameters\fP
.RS 4
\fIcookieValue\fP Cookie from a previous YouTube Music sign in via this application (stored in the database)
.RE
.PP
\fBReturns\fP
.RS 4
True if successfully authenticated, false otherwise
.RE
.PP

.SS "static bool YTMusicUploader\&.Providers\&.Requests\&.IsSongUploaded (string artist, string album, string track, string cookieValue)\fC [static]\fP"

.PP
HttpWebRequest POST request to send to YouTube to determine if the song about to be uploaded already exists It may request a little attention depending on the results, seen as though we're trying to match a song based on artist, album and track name, which may be slightly different in the uploading music file's meta tags\&. Currently it uses a Levenshtein distance fuzzy logic implementation to check similarity between strings and is considered a match if it's above 0\&.75\&. Thanks to: sigma67: https://ytmusicapi.readthedocs.io/en/latest/ https://github.com/sigma67/ytmusicapi
.PP
\fBParameters\fP
.RS 4
\fIartist\fP Artist name from music file meta tag
.br
\fIalbum\fP Album name from music file meta tag
.br
\fItrack\fP Track or song name from music file meta tag
.br
\fIcookieValue\fP Cookie from a previous YouTube Music sign in via this application (stored in the database)
.RE
.PP
\fBReturns\fP
.RS 4
True if song is found, false otherwise
.RE
.PP

.SS "static bool YTMusicUploader\&.Providers\&.Requests\&.IsSongUploaded (string musicFilePath, string cookieValue, \fBMusicDataFetcher\fP musicDataFetcher = \fCnull\fP)\fC [static]\fP"

.PP
HttpWebRequest POST request to send to YouTube to determine if the song about to be uploaded already exists It may request a little attention depending on the results, seen as though we're trying to match a song based on artist, album and track name, which may be slightly different in the uploading music file's meta tags\&. Currently it uses a Levenshtein distance fuzzy logic implementation to check similarity between strings and is considered a match if it's above 0\&.75\&. Thanks to: sigma67: https://ytmusicapi.readthedocs.io/en/latest/ https://github.com/sigma67/ytmusicapi
.PP
\fBParameters\fP
.RS 4
\fImusicFilePath\fP Path to music file to be uploaded
.br
\fIcookieValue\fP Cookie from a previous YouTube Music sign in via this application (stored in the database)
.RE
.PP
\fBReturns\fP
.RS 4
True if song is found, false otherwise
.RE
.PP

.SS "static bool YTMusicUploader\&.Providers\&.Requests\&.IsSongUploadedMulitpleAlbumNameVariations (string artist, string album, string track, string cookieValue)\fC [static]\fP"

.PP
HttpWebRequest POST request to send to YouTube to determine if the song about to be uploaded already exists It may request a little attention depending on the results, seen as though we're trying to match a song based on artist, album and track name, which may be slightly different in the uploading music file's meta tags\&. Currently it uses a Levenshtein distance fuzzy logic implementation to check similarity between strings and is considered a match if it's above 0\&.75\&. Thanks to: sigma67: https://ytmusicapi.readthedocs.io/en/latest/ https://github.com/sigma67/ytmusicapi
.PP
\fBParameters\fP
.RS 4
\fIartist\fP Artist name from music file meta tag
.br
\fIalbum\fP Album name from music file meta tag
.br
\fItrack\fP Track or song name from music file meta tag
.br
\fIcookieValue\fP Cookie from a previous YouTube Music sign in via this application (stored in the database)
.RE
.PP
\fBReturns\fP
.RS 4
True if song is found, false otherwise
.RE
.PP

.SS "static bool YTMusicUploader\&.Providers\&.Requests\&.UploadSong (\fBMainForm\fP mainForm, string cookieValue, string filePath, int maxUploadSpeed, out string error)\fC [static]\fP"

.PP
HttpWebRequest POST request to send to YouTube to upload a music file\&. Thanks to: sigma67: https://ytmusicapi.readthedocs.io/en/latest/ https://github.com/sigma67/ytmusicapi
.PP
\fBParameters\fP
.RS 4
\fImainForm\fP Instance of the main form to utilise the public methods of and update status'
.br
\fIcookieValue\fP Cookie from a previous YouTube Music sign in via this application (stored in the database)
.br
\fIfilePath\fP Full path to file we're uploading
.br
\fImaxUploadSpeed\fP Throttle database bandwidth speed (bytes per second)
.br
\fIerror\fP OUTPUT error string
.RE
.PP
\fBReturns\fP
.RS 4
True if the upload is successful, false otherwise
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for YT Music Uploader from the source code\&.
